static char		buf[BUFFER_SIZE];
	char			*line;
	size_t			line_len;
	size_t			capacity;
	size_t			append_len;

	if (BUFFER_SIZE <= 0 || fd < 0)
		return (NULL);
	line = NULL;
	line_len = 0;
	capacity = 0;
	while (1)
	{
		append_len = get_append_len(fd, buf);
		if (append_len < 1)
			return (line);
		if (capacity < line_len + append_len + 1)
		{
			capacity = calculate_new_capacity(line_len, append_len, buf);
			line = ft_realloc(line, line_len, capacity);
			if (!line)
				return (NULL);
		}
		line = append_line(line, &line_len, buf, append_len);
		if (BUFFER_SIZE == append_len)
			buf[0] = 0;
		else
		{
			ft_memmove(buf, buf + append_len, BUFFER_SIZE - append_len);
			buf[BUFFER_SIZE - append_len] = '\0';
		}
		if (line[line_len - 1] == '\n')
			break ;
	}
	return (line);